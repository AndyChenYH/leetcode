#include <bits/stdc++.h>
#include "utils.cpp"
#define itr iterator
#define psb push_back
#define mkp make_pair
#define mkt make_tuple
#define fi first
#define se second
#define T tuple
#define E exit(0)
#define F function
#define V vector
#define pii pair<int, int>
#define tiii tuple<int, int, int>
#define ll long long
#define S string
#define bt cerr << "line " << __LINE__ << endl
#define db(...) cerr << "[" << #__VA_ARGS__ << "]:", debug_out(__VA_ARGS__)
#define MOD int(1e9 + 7)
#define INF (INT_MAX / 2)
using namespace std;

int LN;
V<int> ini;
V<V<int>> mG;
V<int> uf;
V<T<int, int>> att;
V<bool> vis;
int fid(int u) {
	if (uf[u] == u) {
		return u;
	}
	int rt = fid(uf[u]);
	uf[u] = rt;
	return rt;
}
void un(int a, int b) {
	if (fid(a) == fid(b)) { return; }
	get<0>(att[fid(b)]) += get<0>(att[fid(a)]);
	get<1>(att[fid(b)]) += get<1>(att[fid(a)]);
	uf[fid(a)] = fid(b);
}
void dfs(int u) {
	if (vis[u]) { return; }
	vis[u] = true;
	for (int v = 0; v < LN; v ++) {
		if (mG[u][v]) {
			un(u, v);
			dfs(v);
		}
	}
}
int main() {
	ini = {1, 2};
	mG = {
		{1, 1, 1},
		{1, 1, 1},
		{1, 1, 1},
	};
	LN = mG.size();
	sort(ini.begin(), ini.end());
	vis = V<bool>(LN, false);
	uf = V<int>(LN);
	att = V<T<int, int>>(LN);  // {components, infected}
	for (int u = 0; u < LN; u ++) {
		uf[u] = u;
		att[u] = {1, 0};
	}
	for (int u : ini) {
		get<1>(att[u]) = 1;
	}
	for (int u = 0; u < LN; u ++) {
		if (!vis[u]) {
			dfs(u);
		}
	}
	int mx = -INF;
	int mxn = -1;
	for (int u = 0; u < LN; u ++) {
		if (fid(u) != u) { continue; }
		if (get<1>(att[u]) == 1) {
			if (mx < get<0>(att[u])) {
				mx = get<0>(att[u]);
				mxn = u;
			}
		}
	}
	int ans = -1;
	if (mx == -INF) {
		bt;
		ans = ini[0];
	}
	unordered_set<int> iin(ini.begin(), ini.end());
	for (int u = 0; u < LN; u ++) {
		if (fid(u) == mxn && iin.find(u) != iin.end()) {
			ans = u;
			break;
		}
	}
	db(ans);
	return 0;
}
